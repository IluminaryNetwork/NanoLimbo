plugins {
    id 'java'
    id 'com.gradleup.shadow' version '8.3.9'
    id 'com.github.gmazzo.buildconfig' version '5.6.8'
}

group 'ua.nanit'
version '1.9.8'

compileJava {
    options.encoding = "UTF-8"
}

tasks.withType(JavaCompile).configureEach {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.13.4'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.13.4'

    implementation 'ch.qos.logback:logback-classic:1.5.18'
    implementation 'org.spongepowered:configurate-yaml:4.2.0'

    implementation "io.netty:netty-handler:4.2.6.Final"
    implementation "io.netty:netty-transport-native-epoll:4.2.6.Final:linux-x86_64"
    implementation "io.netty:netty-transport-native-epoll:4.2.6.Final:linux-aarch_64"

    implementation 'net.kyori:adventure-nbt:4.24.0'
    implementation 'com.grack:nanojson:1.10'
    implementation 'com.google.code.gson:gson:2.13.2'
}

buildConfig {
    className("BuildConfig")
    packageName("ua.nanit.limbo")
    buildConfigField(String, 'LIMBO_VERSION', provider { project.version } )
}

shadowJar {
    from 'LICENSE'

    archiveClassifier.set("")

    manifest {
        attributes('Main-Class': 'ua.nanit.limbo.NanoLimbo')
    }

    minimize {
        exclude(dependency('ch.qos.logback:logback-classic:.*:.*'))
    }
}

test {
    useJUnitPlatform()
}
